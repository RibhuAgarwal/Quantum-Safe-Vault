{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ribhu Agarwal\\\\OneDrive\\\\Desktop\\\\Winter 2025\\\\CNS\\\\Quantum-Safe\\\\frontend\\\\src\\\\components\\\\VaultForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { utils } from \"ethers\"; // ‚úÖ For address validation & normalization\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VaultForm() {\n  _s();\n  const [address, setAddress] = useState(\"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cE2\");\n  const [password, setPassword] = useState(\"securePass2025\");\n  const [data, setData] = useState(\"Confidential notes for Project Titan.\");\n  const [zkHash, setZkHash] = useState(\"0x546974616e5a4b68617368323032350000000000000000000000000000000000\");\n  const [message, setMessage] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // ‚úÖ Trim + normalize Ethereum address\n      const normalizedAddress = utils.getAddress(address.trim());\n      const res = await axios.post(\"http://localhost:3001/api/vault/create\", {\n        address: normalizedAddress,\n        password,\n        data,\n        zkHash\n      });\n      setMessage(\"‚úÖ Vault created! IPFS Hash: \" + res.data.ipfsHash);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      const errMsg = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || err.message || \"Something went wrong\";\n      setMessage(\"‚ùå Error: \" + errMsg);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDD10 Create Vault\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: address,\n        onChange: e => setAddress(e.target.value),\n        required: true,\n        placeholder: \"Ethereum Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true,\n        placeholder: \"Encryption Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: data,\n        onChange: e => setData(e.target.value),\n        required: true,\n        placeholder: \"Secret Data / Notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: zkHash,\n        onChange: e => setZkHash(e.target.value),\n        placeholder: \"ZK Auth Hash\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Encrypt & Store\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        marginTop: \"1em\",\n        color: message.startsWith(\"‚úÖ\") ? \"green\" : \"red\"\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(VaultForm, \"w2o/pgVdmxJv6vJq3xT8e+5VzMA=\");\n_c = VaultForm;\nexport default VaultForm;\nvar _c;\n$RefreshReg$(_c, \"VaultForm\");","map":{"version":3,"names":["React","useState","axios","utils","jsxDEV","_jsxDEV","VaultForm","_s","address","setAddress","password","setPassword","data","setData","zkHash","setZkHash","message","setMessage","handleSubmit","e","preventDefault","normalizedAddress","getAddress","trim","res","post","ipfsHash","err","_err$response","_err$response$data","errMsg","response","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","placeholder","style","marginTop","color","startsWith","_c","$RefreshReg$"],"sources":["C:/Users/Ribhu Agarwal/OneDrive/Desktop/Winter 2025/CNS/Quantum-Safe/frontend/src/components/VaultForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { utils } from \"ethers\"; // ‚úÖ For address validation & normalization\n\nfunction VaultForm() {\n  const [address, setAddress] = useState(\"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cE2\");\n  const [password, setPassword] = useState(\"securePass2025\");\n  const [data, setData] = useState(\"Confidential notes for Project Titan.\");\n  const [zkHash, setZkHash] = useState(\"0x546974616e5a4b68617368323032350000000000000000000000000000000000\");\n  const [message, setMessage] = useState(\"\");\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      // ‚úÖ Trim + normalize Ethereum address\n      const normalizedAddress = utils.getAddress(address.trim());\n\n      const res = await axios.post(\"http://localhost:3001/api/vault/create\", {\n        address: normalizedAddress,\n        password,\n        data,\n        zkHash,\n      });\n\n      setMessage(\"‚úÖ Vault created! IPFS Hash: \" + res.data.ipfsHash);\n    } catch (err) {\n      const errMsg = err.response?.data?.error || err.message || \"Something went wrong\";\n      setMessage(\"‚ùå Error: \" + errMsg);\n    }\n  };\n\n  return (\n    <div>\n      <h2>üîê Create Vault</h2>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={address}\n          onChange={(e) => setAddress(e.target.value)}\n          required\n          placeholder=\"Ethereum Address\"\n        />\n        <input\n          type=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          required\n          placeholder=\"Encryption Password\"\n        />\n        <textarea\n          value={data}\n          onChange={(e) => setData(e.target.value)}\n          required\n          placeholder=\"Secret Data / Notes\"\n        />\n        <input\n          type=\"text\"\n          value={zkHash}\n          onChange={(e) => setZkHash(e.target.value)}\n          placeholder=\"ZK Auth Hash\"\n        />\n        <button type=\"submit\">Encrypt & Store</button>\n      </form>\n\n      {message && (\n        <p style={{ marginTop: \"1em\", color: message.startsWith(\"‚úÖ\") ? \"green\" : \"red\" }}>\n          {message}\n        </p>\n      )}\n    </div>\n  );\n}\n\nexport default VaultForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}